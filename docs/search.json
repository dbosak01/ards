[{"path":"https://ards.r-sassy.org/articles/ards.html","id":"ards-structure","dir":"Articles","previous_headings":"","what":"ARDS Structure","title":"ards","text":"data structure produced ards package structure recommended CDISC. structure puts analysis values single column. Therefore, one row per analysis value. Descriptive information, name analysis variable groups, stored columns. data dictionary ARDS dataset:","code":""},{"path":"https://ards.r-sassy.org/articles/ards.html","id":"how-to-use-ards","dir":"Articles","previous_headings":"","what":"How to Use ards","title":"ards","text":"see ards functions work, let us first perform simple analysis mtcars sample data frame. Examine following example: image ARDS dataset created :","code":"library(dplyr) library(ards)  # Initialize the ARDS # - These values will be repeated on all rows in the ARDS dataset init_ards(studyid = \"MTCARS\",           tableid = \"01\", adsns = \"mtcars\",           population = \"all cars\",           time = \"1973\")  # Perform analysis on MPG # - Using cylinders as a by group analdf <- mtcars |>    select(cyl, mpg) |>    group_by(cyl) |>    summarize(n = n(),             mean = mean(mpg),             std = sd(mpg),             min = min(mpg),             max = max(mpg))  # View analysis data analdf #     cyl     n  mean   std   min   max #   <dbl> <int> <dbl> <dbl> <dbl> <dbl> # 1     4    11  26.7  4.51  21.4  33.9 # 2     6     7  19.7  1.45  17.8  21.4 # 3     8    14  15.1  2.56  10.4  19.2  # Add analysis data to ARDS # - These values will be unique for each row in the ARDS dataset add_ards(analdf,           statvars = c(\"n\", \"mean\", \"std\", \"min\", \"max\"),          anal_var = \"mpg\", trtvar = \"cyl\")                     # Get the ARDS # - Remove by-variables to make the ARDS dataset easier to read ards <- get_ards() |> select(-starts_with(\"by\"))  # Uncomment to view ards # View(ards)"},{"path":"https://ards.r-sassy.org/articles/ards.html","id":"more-realistic-example","dir":"Articles","previous_headings":"","what":"More Realistic Example","title":"ards","text":"can seen , functions ards package easy use. can integrated standard Table, Listing, Figure (TLF) program, data preparation program. many cases, program need restructured accommodate ards functions. Let us look realistic program. demonstration, create analysis Demographics table. Note following program: input data subset 10 subjects relevant variables make program easier read understand. init_ards() function called top program. values passed rows ARDS. add_ards() function identifies variables analysis dataset want add ARDS. variable values extracted analysis data transformed ARDS structure. add_ards() function can placed middle data pipeline, interfere analysis. add_ards() function called immediately calculations, formatting transformations. function called point ARDS contains original numeric values full precision. analysis complete, get_ards() called retrieve ARDS dataset. ARDS dataset standard R data frame can saved, combined analysis results, passed another program additional processing. ARDS dataset created code sample:","code":"library(dplyr) library(tibble) library(tidyr) library(ards)  # Create input data adsl <- read.table(header = TRUE, text = ' STUDYID DOMAIN  USUBJID SUBJID  SITEID  BRTHDTC AGE AGEU    SEX RACE    ETHNIC  ARMCD   ARM ABC DM  ABC-01-049  49  1   11/12/1966  39  YEARS   M   \"WHITE\" \"NOT HISPANIC OR LATINO\"    4   \"ARM D\" ABC DM  ABC-01-050  50  1   12/19/1958  47  YEARS   M   \"WHITE\" \"NOT HISPANIC OR LATINO\"    2   \"ARM B\" ABC DM  ABC-01-051  51  1   5/2/1972    34  YEARS   M   \"WHITE\" \"NOT HISPANIC OR LATINO\"    1   \"ARM A\" ABC DM  ABC-01-052  52  1   6/27/1961   45  YEARS   F   \"WHITE\" \"UNKNOWN\"   3   \"ARM C\" ABC DM  ABC-01-053  53  1   4/7/1980    26  YEARS   F   \"WHITE\" \"NOT HISPANIC OR LATINO\"    2   \"ARM B\" ABC DM  ABC-01-054  54  1   9/13/1962   44  YEARS   M   \"WHITE\" \"NOT HISPANIC OR LATINO\"    4   \"ARM D\" ABC DM  ABC-01-055  55  1   6/11/1959   47  YEARS   F   \"BLACK OR AFRICAN AMERICAN\" \"UNKNOWN\"   3   \"ARM C\" ABC DM  ABC-01-056  56  1   5/2/1975    31  YEARS   M   \"WHITE\" \"NOT HISPANIC OR LATINO\"    1   \"ARM A\" ABC DM  ABC-01-113  113 1   2/8/1932    74  YEARS   M   \"WHITE\" \"UNKNOWN\"   4   \"ARM D\"')  # Initalize ARDS init_ards(studyid = \"ABC\",           tableid = \"01\", adsns = \"adsl\",           population = \"safety population\",           time = \"SCREENING\", where = \"saffl = TRUE\", reset = TRUE)  # Perform analysis on AGE variable agedf <- adsl |>   select(AGE, ARM) |>   group_by(ARM) |>   summarize(n = n(),             mean = mean(AGE),             std = sd(AGE),             median = median(AGE),             min = min(AGE),             max = max(AGE)) |>   mutate(analvar = \"AGE\") |>   ungroup() |>   add_ards(statvars = c(\"n\", \"mean\", \"std\", \"median\", \"min\", \"max\"),            statdesc = c(\"N\", \"Mean\", \"Std\", \"Median\", \"Min\", \"Max\"),            anal_var = \"AGE\", trtvar = \"ARM\") |>   transmute(analvar, ARM,             n = sprintf(\"%d\", n),             mean_sd = sprintf(\"%.1f (%.2f)\", mean, std),             median = sprintf(\"%.1f\", median),             min_max = sprintf(\"%.1f-%.1f\", min, max)) |>   pivot_longer(c(n, mean_sd, median, min_max),                names_to = \"label\", values_to = \"stats\") |>   pivot_wider(names_from = ARM,               values_from = c(stats)) |>   transmute(analvar, label = c(\"N\", \"Mean (Std)\", \"Median\", \"Min-Max\"),            trtA = `ARM A`, trtB = `ARM B`, trtC = `ARM C`, trtD = `ARM D`)  # View analysis results agedf #   # A tibble: 4 × 6 #   analvar label      trtA        trtB         trtC        trtD         #   <chr>   <chr>      <chr>       <chr>        <chr>       <chr>        # 1 AGE     N          2           2            2           3            # 2 AGE     Mean (Std) 32.5 (2.12) 36.5 (14.85) 46.0 (1.41) 52.3 (18.93) # 3 AGE     Median     32.5        36.5         46.0        44.0         # 4 AGE     Min-Max    31.0-34.0   26.0-47.0    45.0-47.0   39.0-74.0    # Get population counts trt_pop <- count(adsl, ARM) |> deframe()  trt_pop # ARM A ARM B ARM C ARM D  #   2     2     2     3   # Perform analysis on SEX variable sexdf <- adsl |>   mutate(denom = trt_pop[paste0(adsl$ARM)]) |>   group_by(SEX, ARM, denom) |>   summarize(cnt = n()) |>   transmute(SEX, ARM, cnt, analvar = \"SEX\", label = SEX,  pct =  cnt / denom * 100) |>   ungroup() |>   add_ards(statvars = c(\"cnt\", \"pct\"), statdesc = \"label\",            anal_var = \"SEX\", trtvar = \"ARM\") |>   pivot_wider(names_from = ARM,               values_from = c(cnt, pct)) |>   transmute(analvar, label,             trtA = sprintf(\"%1d (%3.0f%%)\", `cnt_ARM A`, `pct_ARM A`),             trtB = sprintf(\"%1d (%3.0f%%)\", `cnt_ARM B`, `pct_ARM B`),             trtC = sprintf(\"%1d (%3.0f%%)\", `cnt_ARM C`, `pct_ARM C`),             trtD = sprintf(\"%1d (%3.0f%%)\", `cnt_ARM D`, `pct_ARM D`))  # View analysis results sexdf #   analvar label trtA      trtB     trtC      trtD      #   <chr>   <chr> <chr>     <chr>    <chr>     <chr>     # 1 SEX     F     NA ( NA%) 1 ( 50%) 2 (100%)  NA ( NA%) # 2 SEX     M     2 (100%)  1 ( 50%) NA ( NA%) 3 (100%)   # Perform analysis on RACE racedf <- adsl |>   mutate(denom = trt_pop[paste0(adsl$ARM)]) |>   group_by(RACE, ARM, denom) |>   summarize(cnt = n()) |>   transmute(RACE, ARM, cnt, analvar = \"RACE\", label = RACE,  pct =  cnt / denom * 100) |>   ungroup() |>   add_ards(statvars = c(\"cnt\", \"pct\"), statdesc = \"label\",            anal_var = \"RACE\", trtvar = \"ARM\") |>   pivot_wider(names_from = ARM,               values_from = c(cnt, pct)) |>   transmute(analvar, label,             trtA = sprintf(\"%1d (%3.0f%%)\", `cnt_ARM A`, `pct_ARM A`),             trtB = sprintf(\"%1d (%3.0f%%)\", `cnt_ARM B`, `pct_ARM B`),             trtC = sprintf(\"%1d (%3.0f%%)\", `cnt_ARM C`, `pct_ARM C`),             trtD = sprintf(\"%1d (%3.0f%%)\", `cnt_ARM D`, `pct_ARM D`))  # View analysis results racedf #   analvar label                     trtA      trtB      trtC     trtD      #   <chr>   <chr>                     <chr>     <chr>     <chr>    <chr>     # 1 RACE    BLACK OR AFRICAN AMERICAN NA ( NA%) NA ( NA%) 1 ( 50%) NA ( NA%) # 2 RACE    WHITE                     2 (100%)  2 (100%)  1 ( 50%) 3 (100%)   # Combine all analysis into final data frame final <- bind_rows(agedf, sexdf, racedf)  # View final data frame # - This data frame would normally used for reporting final # # A tibble: 8 × 6 #   analvar label                     trtA        trtB         trtC        trtD         #   <chr>   <chr>                     <chr>       <chr>        <chr>       <chr>        # 1 AGE     N                         2           2            2           3            # 2 AGE     Mean (Std)                32.5 (2.12) 36.5 (14.85) 46.0 (1.41) 52.3 (18.93) # 3 AGE     Median                    32.5        36.5         46.0        44.0         # 4 AGE     Min-Max                   31.0-34.0   26.0-47.0    45.0-47.0   39.0-74.0    # 5 SEX     F                         NA ( NA%)   1 ( 50%)     2 (100%)    NA ( NA%)    # 6 SEX     M                         2 (100%)    1 ( 50%)     NA ( NA%)   3 (100%)     # 7 RACE    BLACK OR AFRICAN AMERICAN NA ( NA%)   NA ( NA%)    1 ( 50%)    NA ( NA%)    # 8 RACE    WHITE                     2 (100%)    2 (100%)     1 ( 50%)    3 (100%)     # Extract ARDS # - Remove by-variables to improve readability ards <- get_ards() |> select(-starts_with(\"by\"))                               # Uncomment to view ARDS                              # View(ards)"},{"path":"https://ards.r-sassy.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Bosak. Author, maintainer. Kevin Kramer. Contributor. Jack Fuller. Contributor. Matt Baldwin. Contributor.","code":""},{"path":"https://ards.r-sassy.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bosak D (2023). ards: Creates Analysis Results Datasets. R package version 0.1.0, https://ards.r-sassy.org.","code":"@Manual{,   title = {ards: Creates Analysis Results Datasets},   author = {David Bosak},   year = {2023},   note = {R package version 0.1.0},   url = {https://ards.r-sassy.org}, }"},{"path":"https://ards.r-sassy.org/index.html","id":"introduction-to-ards","dir":"","previous_headings":"","what":"Creates Analysis Results Datasets","title":"Creates Analysis Results Datasets","text":"Analysis Results Dataset (ARDS) commonly used pharma-biotech industry capture results analysis tabular data structure. ards package helps create ARDS. ards functions can called inside report program data preparation program. functions use “bucketing” approach, whereby data can added ARDS multiple calls multiple intermediate data sets.","code":""},{"path":"https://ards.r-sassy.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Creates Analysis Results Datasets","text":"ards package can installed console. Simply run following command: want latest development version, can install directly github: put following line top program script: ards package give access number functions help create Analysis Results Dataset (ARDS). examples usage information, visit ards documentation site .","code":"install.packages(\"ards\") devtools::install_github(\"https://github.com/dbosak01/ards\") library(ards)"},{"path":"https://ards.r-sassy.org/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting Help","title":"Creates Analysis Results Datasets","text":"need help, first place turn ards web site. web site full documentation ards functions. want look code ards package, visit github page . encounter bug feature request, please submit issue .","code":""},{"path":"https://ards.r-sassy.org/index.html","id":"see-also","dir":"","previous_headings":"","what":"See Also","title":"Creates Analysis Results Datasets","text":"sassy meta-package includes several packages help make R easier everyone. can read sassy package .","code":""},{"path":"https://ards.r-sassy.org/reference/add_ards.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds data to an Analysis Results Dataset — add_ards","title":"Adds data to an Analysis Results Dataset — add_ards","text":"add_ards function dumps data input analysis  dataset ARDS dataset.  function designed pipe-friendly, return input dataset unaltered.  parameters function define extract desired data analysis dataset. \"statvars\" parameter defines columns contain desired analysis results.  values columns used populate \"statval\" variable output dataset.  parameters used define identifying information statistics values, optional. add_ards function called immediately calculations, analysis results still numeric form.   recommendation ensure ARDS contain full precision analysis values.  analysis values dumped ARDS, may proceed transform format analysis data, without affecting values captured ARDS.","code":""},{"path":"https://ards.r-sassy.org/reference/add_ards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds data to an Analysis Results Dataset — add_ards","text":"","code":"add_ards(   data,   statvars,   statdesc = NULL,   byvars = NULL,   trtvar = NULL,   paramcd = NULL,   anal_var = NULL,   anal_val = NULL )"},{"path":"https://ards.r-sassy.org/reference/add_ards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds data to an Analysis Results Dataset — add_ards","text":"data input data create analysis results .  parameter required. statvars vector column names identify desired results. Statvar columns must numeric.  parameter required. statdesc vector values column name identifies description  statvar. passed vector values, number values correspond number 'statvar' variables. byvars vector column names use variables. trtvar column name use treatment variable. paramcd character string describes analysis parameter  code column name contains parameter code. supplied column name, function populate 'paramcd' column ARDS value 'paramcd' column. anal_var column name analysis variable string identifies analysis variable. anal_val analysis variable value.  Can identified column name vector values. default, analysis values taken values variable passed 'anal_var'.  parameter  exists may pass values different variable, desired.","code":""},{"path":"https://ards.r-sassy.org/reference/add_ards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds data to an Analysis Results Dataset — add_ards","text":"input data frame, unaltered.","code":""},{"path":[]},{"path":"https://ards.r-sassy.org/reference/add_ards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds data to an Analysis Results Dataset — add_ards","text":"","code":"library(ards) library(dplyr)  # Initialize the ARDS init_ards(studyid = \"MTCARS\",           tableid = \"01\", adsns = \"mtcars\",           population = \"all cars\",           time = \"1973\")  # Perform analysis on MPG # - Add to ARDS from within continuous variable pipeline mpgdf <- mtcars |>    select(cyl, mpg) |>    group_by(cyl) |>    summarize(n = n(),             mean = mean(mpg),             std = sd(mpg),             min = min(mpg),             max = max(mpg)) |>    add_ards(statvars = c(\"n\", \"mean\", \"std\", \"min\", \"max\"),          anal_var = \"mpg\", trtvar = \"cyl\")              # Perform analysis on GEAR # - Add to ARDS from within categorical variable pipeline geardf <- mtcars |>    mutate(denom = n()) |>    select(cyl, gear, denom) |>    group_by(cyl, gear) |>    summarize(cnt = n(),              denom = max(denom)) |>   mutate(pct = cnt / denom * 100) |>    add_ards(statvars = c(\"cnt\", \"pct\", \"denom\"),          anal_var = \"gear\", trtvar = \"cyl\")  # Get the ARDS ards <- get_ards()   # Uncomment to view ards # View(ards)"},{"path":"https://ards.r-sassy.org/reference/ards.html","id":null,"dir":"Reference","previous_headings":"","what":"ards: A package for creating Analysis Results Datasets — ards","title":"ards: A package for creating Analysis Results Datasets — ards","text":"Analysis Results Dataset (ARDS) commonly used pharma-biotech industry capture results analysis tabular data structure.  ards package helps create ARDS. ards functions can called inside  report program data preparation program.  functions use  \"bucketing\" approach, whereby data can added ARDS multiple  calls multiple intermediate data sets.","code":""},{"path":"https://ards.r-sassy.org/reference/ards.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ards: A package for creating Analysis Results Datasets — ards","text":"ards package allows easily create ARDS dataset standard clinical reporting data preparation program.   ards package contains three functions, used create ARDS dataset.  functions called  following order, described purpose: init_ards: Initialize ARDS dataset add_ards: Add data ARDS dataset get_ards: Extract completed ARDS Click links information function. following figure describes structure ARDS dataset.  structure recommended CDISC.","code":""},{"path":"https://ards.r-sassy.org/reference/get_ards.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the current Analysis Results Dataset — get_ards","title":"Returns the current Analysis Results Dataset — get_ards","text":"get_ards function returns current state Analysis Results Dataset (ARDS) R data frame.  data frame may saved disk, saved database, examined code.  function takes parameters.","code":""},{"path":"https://ards.r-sassy.org/reference/get_ards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the current Analysis Results Dataset — get_ards","text":"","code":"get_ards()"},{"path":"https://ards.r-sassy.org/reference/get_ards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the current Analysis Results Dataset — get_ards","text":"data frame current analysis results.","code":""},{"path":[]},{"path":"https://ards.r-sassy.org/reference/get_ards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the current Analysis Results Dataset — get_ards","text":"","code":"library(ards) library(dplyr)  # Initialize the ARDS # - These values will be common through the dataset init_ards(studyid = \"IRIS\",           tableid = \"01\", adsns = \"iris\",           population = \"all flowers\",           time = \"1973\")  # Perform analysis on Petal.Length # - Using Species as a by-group analdf1 <- iris |>    select(Petal.Length, Species) |>    group_by(Species) |>    summarize(n = n(),             mean = mean(Petal.Length),             std = sd(Petal.Length),             min = min(Petal.Length),             max = max(Petal.Length)) |>    add_ards(statvars = c(\"n\", \"mean\", \"std\", \"min\", \"max\"),            statdesc = c(\"Count\", \"Mean\", \"STD\", \"Minimum\", \"Maximum\"),            anal_var = \"Petal.Length\", trtvar = \"Species\")             # Perform analysis on Petal.Width # - Using Species as a by-group analdf2 <- iris |>    select(Petal.Width, Species) |>    group_by(Species) |>    summarize(n = n(),             mean = mean(Petal.Width),             std = sd(Petal.Width),             min = min(Petal.Width),             max = max(Petal.Width)) |>    add_ards(statvars = c(\"n\", \"mean\", \"std\", \"min\", \"max\"),            statdesc = c(\"Count\", \"Mean\", \"STD\", \"Minimum\", \"Maximum\"),            anal_var = \"Petal.Width\", trtvar = \"Species\")  # Get the ARDS ards <- get_ards()   # Uncomment to view ards # View(ards)"},{"path":"https://ards.r-sassy.org/reference/init_ards.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize the Analysis Results Dataset — init_ards","title":"Initialize the Analysis Results Dataset — init_ards","text":"function initialize Analysis Results Dataset (ARDS). function first create data template desired structure, populate common values across dataset template.   common values repeated row analysis data frame subsequent inserts add_ards function.","code":""},{"path":"https://ards.r-sassy.org/reference/init_ards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize the Analysis Results Dataset — init_ards","text":"","code":"init_ards(   studyid = NA,   tableid = NA,   adsns = NA,   population = NA,   time = NA,   where = NA,   reset = TRUE )"},{"path":"https://ards.r-sassy.org/reference/init_ards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize the Analysis Results Dataset — init_ards","text":"studyid study analysis performed.  parameter optional. tableid table identifier use results. value  identifies table within study.  Optional string value. adsns vector source dataset names.  parameter used  identify input data analysis.  parameter optional. population description analysis population.  parameter used identify population analysis.  parameter optional. time description time frame used analysis.  example,  clinical study, \"time\" value may identify visit analysis based. optional description criteria used subset  data analysis. reset true, clears existing ARDS dataset replaces empty template.  Otherwise, just assign new parameter values  existing template.  default value TRUE, meaning ARDS memory cleared every time  init_ards called.  wish assign new initialization values,  keep appending existing ARDS dataset, set parameter FALSE.   feature used creating two different tables  program.","code":""},{"path":"https://ards.r-sassy.org/reference/init_ards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize the Analysis Results Dataset — init_ards","text":"initialized analysis dataset.","code":""},{"path":[]},{"path":"https://ards.r-sassy.org/reference/init_ards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize the Analysis Results Dataset — init_ards","text":"","code":"library(ards) library(dplyr)  # Initialize the ARDS # - These values will be common through the dataset init_ards(studyid = \"MTCARS\",           tableid = \"01\", adsns = \"mtcars\",           population = \"all cars\",           time = \"1973\")  # Perform analysis on MPG # - Using cylinders as a by-group analdf <- mtcars |>    select(cyl, mpg) |>    group_by(cyl) |>    summarize(n = n(),             mean = mean(mpg),             std = sd(mpg),             min = min(mpg),             max = max(mpg))  # View analysis data analdf #     cyl     n  mean   std   min   max #   <dbl> <int> <dbl> <dbl> <dbl> <dbl> # 1     4    11  26.7  4.51  21.4  33.9 # 2     6     7  19.7  1.45  17.8  21.4 # 3     8    14  15.1  2.56  10.4  19.2  # Add analysis data to ARDS # - These values will be unique per row add_ards(analdf,           statvars = c(\"n\", \"mean\", \"std\", \"min\", \"max\"),          anal_var = \"mpg\", trtvar = \"cyl\")   # Get the ARDS ards <- get_ards()   # Uncomment to view ards # View(ards)"},{"path":"https://ards.r-sassy.org/news/index.html","id":"ards-010","dir":"Changelog","previous_headings":"","what":"ards 0.1.0","title":"ards 0.1.0","text":"Initial version. Add init_ards(), add_ards(), get_ards() functions. Wrote documentation created pkgdown site. Added NEWS.md file track changes package.","code":""}]
